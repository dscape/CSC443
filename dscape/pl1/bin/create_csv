#!/usr/bin/env node

var exec = require('child_process').exec;
var npair = require('n-pair');
var path = require('path');
var fs = require('fs');

var first = true;
var combinations = [];

var www_path = path.join(__dirname, '/../www/create_random_file.html');
var www_contents = fs.readFileSync(www_path, 'utf-8');

npair([
  [1024 * 1024 * 10, // 10mb
  1024 * 1024 * 50, // 50mb
  1024 * 1024 * 100 // 100mb
  ],
  [Math.pow(10, 2),
  Math.pow(10, 3),
  Math.pow(10, 4),
  Math.pow(10, 5),
  Math.pow(10, 6),
  Math.pow(10, 7),
  Math.pow(10, 8)
  ]], function (x) {
  combinations.push(x);
});

(function next() {
  //
  // if we have run all combinations end
  //
  if (combinations.length === 0) {
    var csvlines = fs.readFileSync(path.join(__dirname, '/../csv/create_random_file.csv'), 'utf-8')
      .split("\n")
      .filter(function (line) {
        return line !== ""
      });
    www_contents = www_contents.replace(/#iom[\s\S]+#eom/, '#iom\n  var csv = ' + JSON.stringify(csvlines) + '.join("\\n");\n//#eom');
    fs.writeFileSync(www_path, www_contents, 'utf-8');
    console.log('open ' + www_path);
    process.exit(0);
  }

  //
  // get the current config
  //
  var tuple = combinations.shift();
  var total_bytes = tuple[0];
  var block_size = tuple[1];

  //
  // to have some notion of progress
  //
  console.log(['total_bytes:', total_bytes, 'block_size:', block_size, 'remaining:', combinations.length].join(' '));

  var cmd = [
    path.join(__dirname, 'create_random_file'),
    path.join(__dirname, '/../out/foo'),
    total_bytes,
    block_size,
    (first ? ' > ' : ' >> '),
    path.join(__dirname, '/../csv/create_random_file.csv')
    ].join(' ');
  console.log(cmd);

  //
  // exec the calculation for block_size and total_bytes
  //
  var proc = exec(cmd, function (err, stdout, stderr) {
    if (err || stderr)
      throw err || stderr;
    first = false;
    next();
  });
})();
// lint: 1 error
